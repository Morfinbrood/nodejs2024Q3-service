openapi: 3.0.0
paths:
  /user:
    get:
      operationId: UsersController_getAllUsers
      parameters: []
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateUserDto'
      summary: Get all users
      tags: &ref_0
        - Users
    post:
      operationId: UsersController_createUser
      parameters: []
      requestBody:
        required: true
        description: Data to create a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDto'
        '400':
          description: Invalid data for creating a user
      summary: Create a new user
      tags: *ref_0
  /user/{id}:
    get:
      operationId: UsersController_getUserById
      parameters:
        - name: id
          required: true
          in: path
          description: User UUID
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDto'
        '400':
          description: Invalid user ID format
        '404':
          description: User not found
      summary: Get a user by ID
      tags: *ref_0
    put:
      operationId: UsersController_updateUserPassword
      parameters:
        - name: id
          required: true
          in: path
          description: User UUID
          schema:
            format: uuid
            type: string
      requestBody:
        required: true
        description: Data to update the password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: Password successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDto'
        '400':
          description: Invalid user ID format
        '403':
          description: Wrong old password
        '404':
          description: User not found
      summary: Update user password
      tags: *ref_0
    delete:
      operationId: UsersController_deleteUser
      parameters:
        - name: id
          required: true
          in: path
          description: User UUID
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: User successfully deleted
        '400':
          description: Invalid user ID format
        '404':
          description: User not found
      summary: Delete a user
      tags: *ref_0
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: User login
          example: TEST_LOGIN
          minLength: 4
          maxLength: 255
        password:
          type: string
          description: User password
          example: TEST_PASSWORD
          minLength: 4
          maxLength: 30
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: Old user password
          example: OLD_PASSWORD
          minLength: 4
          maxLength: 30
        newPassword:
          type: string
          description: New user password
          example: NEW_PASSWORD
          minLength: 4
          maxLength: 30
      required:
        - oldPassword
        - newPassword
